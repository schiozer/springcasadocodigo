
ajuda grupo do google

https://groups.google.com/forum/?hl=pt-BR#!forum/livro-springmvc



iniciando JBoss Forge para criar o projeto
$caminhoParaSuaInstalacao/bin/forge

criando projeto com JBoss Forge

project-new --named casadocodigo

Baixa Spring Tools Suite

copiei para program file e depois abrir e mandar um import maven project

criei um script para criar o schema do banco, pois quem criará o banco propriamente dito será o JPA.

E eu não vou deixar diferente não ... pelo menos não por enquanto ... agora, se eu quiser eu posso 
deixar a aplicação se resolver ou então criar eu mesmo

Tive esse erro de properties resolvido em 24/11

Stacktrace:] with root cause
javax.servlet.jsp.JspTagException: No message found under code 'navigation.category.agile' for locale 'en_US'.

Era a mesma parada do message que passei perrengue com JSF. Foi só copiar a tag 'navigation.category.agile' para dentro do meu properties
não vou procurar como fazer US ou PT agora.

testando interfaces 
===============================================
No primeiro exemplo, fizemos uma requisição indicando que desejamos o retorno no formato application/json. Isso é feito através do cabeçalho
Accept. Perceba que no segundo já indicamos que queremos HTML como
formato. Essa técnica é conhecida como Content Negotiation e é muito utilizada
em integrações baseadas no HTTP, também conhecida como REST.
A parte bem legal é que o Spring MVC já oferece esse suporte para nós.
Precisamos apenas ensiná-lo que agora ele tem que decidir qual formato retornar
baseado no Accept.

curl -H "Accept:application/json" -X GET "http://localhost:8080/casadocodigo/products"

curl -H "Accept:text/html" -X GET "http://localhost:8080/casadocodigo/products"



http://stackoverflow.com/questions/4414313/how-to-organize-java-properties-entries-for-internationalization


Código Fonte do Projeto, precisamos pegar o ProductBuilder
https://github.com/livrospringmvc/lojacasadocodigo

repositório
	


Deploy no Heroku

Baixar o maven do próprio diretório da apache mesmo
https://maven.apache.org/download.cgi

instala dentro de alguma pasta, eu havia colocado dentro de java, coloca dentro do path e então executa

mvn package

para gerar o pacote de instalação

para executar o package e ver se funciona:
java -jar target/dependency/webapp-runner.jar target/*.war



página 211
16.2 Qual banco será usado no Heroku
Eis um ponto que pode ter ficado na sua cabeça em relação ao banco usado para o ambiente de produção. O leitormais atento deve ter notado que foi usado o PostgreSQL em vez do MYSQL. Fomos por este caminho apenas
porque o Heroku usa o Postgre como default.

O Heroku faz todo processo de deploy ser baseado no git, de modo que é imprescindível que você o tenha instalado em sua máquina

export
DATABASE_URL=postgres://user:password@localhost:5432/nomeDaApp

o meu é

DATABASE_URL=postgres://grjlexanmnjcbw:131ed702d885eaacf54960ef560ec9045cbb8fa164080842b8bd4dbefe063fb3@ec2-54-225-107-107.compute-1.amazonaws.com:5432/d3v6qoeh3m8qv2




Para realizar o download do Heroku siga os passos sugeridos neste link:
https://toolbelt.heroku.com/.

não precisa instalar o GIT se já o tiver feito.

no diretório da aplicação, rodar .... : heroku apps:create cdcspringmvcschiozer

o nonme da aplicação é chave única do heroku todo.

criar um arquivo chamado Procfile, com o seguinte conteúdo, e tudo na mesma linha:
web: java $JAVA_OPTS -jar -Dspring.profiles.active=prod target/dependency/webapp-runner.jar --port $PORT target/*.war

Trabalhando com heroku

https://devcenter.heroku.com/articles/heroku-cli

https://dashboard.heroku.com/auth/heroku/callback?!=&code=169f2534-51f7-4657-b048-1438c02768c3


heroku login

para criar um app no heroku
heroku apps:create cdcspringmvcschiozer

para realizar deploy no heroku
git push heroku master

heroku ps:scale web=1
o número que se coloca é o número de dynos, tenho acesso free dyno, que me permite ter apenas um dyno que morre com 30 minutos de inatividade, ou seja, é apenas para testes mesmo.
depois disso preciso melhorar meu esquema, :)

abrir a aplicação, vai direcionar para o browser
heroku open



Para se cnectar no Heroku Postgre pelo SQL Developer

Esse site ajuda
https://devcenter.heroku.com/articles/connecting-to-heroku-postgres-databases-from-outside-of-heroku

Baixe o JDBC para Postgre do SQL developer

Copie para dentro do dir do SQLdeveloper, exemplo:
D:\projetos\FMW7\sqldeveloper\jdbc\postgresql-42.0.0\postgresql-42.0.0.jar

Depois disso, entrar no SQL Developer e criar a conexão de POstgree de acordo com os dados do Heroku. Não vai funcionar por que precisa do SSL diponível: o arquivo connections.xml no meu exemplo se encontra:

C:\Users\Fabio\AppData\Roaming\SQL Developer\system4.1.1.19.59\o.jdeveloper.db.connection.12.2.1.0.42.150520.751

Procurar a conexão criada dentro do arquivo e acrescentar o sslmode=required no final, como no exemplo abaixo:

         <StringRefAddr addrType="customUrl">
            <Contents>jdbc:postgresql://ec2-54-225-107-107.compute-1.amazonaws.com:5432/d3v6qoeh3m8qv2?sslmode=require</Contents>
         </StringRefAddr>

